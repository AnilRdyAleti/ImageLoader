// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package me.anil.imageloader.daggermodules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import me.anil.imageloader.modules.homescreen.HomeScreenPresenter;
import me.anil.imageloader.network.RestClient;

public final class PresenterModule_ProvideHomeScreenPresenterFactory
    implements Factory<HomeScreenPresenter> {
  private final PresenterModule module;

  private final Provider<RestClient> restClientProvider;

  public PresenterModule_ProvideHomeScreenPresenterFactory(
      PresenterModule module, Provider<RestClient> restClientProvider) {
    assert module != null;
    this.module = module;
    assert restClientProvider != null;
    this.restClientProvider = restClientProvider;
  }

  @Override
  public HomeScreenPresenter get() {
    return Preconditions.checkNotNull(
        module.provideHomeScreenPresenter(restClientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<HomeScreenPresenter> create(
      PresenterModule module, Provider<RestClient> restClientProvider) {
    return new PresenterModule_ProvideHomeScreenPresenterFactory(module, restClientProvider);
  }

  /** Proxies {@link PresenterModule#provideHomeScreenPresenter(RestClient)}. */
  public static HomeScreenPresenter proxyProvideHomeScreenPresenter(
      PresenterModule instance, RestClient restClient) {
    return instance.provideHomeScreenPresenter(restClient);
  }
}
